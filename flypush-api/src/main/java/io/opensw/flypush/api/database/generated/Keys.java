/*
 * This file is generated by jOOQ.
 */
package io.opensw.flypush.api.database.generated;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import io.opensw.flypush.api.database.generated.tables.EngineApplication;
import io.opensw.flypush.api.database.generated.tables.EngineFlywaySchemaHistory;
import io.opensw.flypush.api.database.generated.tables.EngineInstallation;
import io.opensw.flypush.api.database.generated.tables.EngineInstallationTopic;
import io.opensw.flypush.api.database.generated.tables.EnginePushMessage;
import io.opensw.flypush.api.database.generated.tables.EngineTopic;
import io.opensw.flypush.api.database.generated.tables.EngineVariant;
import io.opensw.flypush.api.database.generated.tables.records.ApplicationRecord;
import io.opensw.flypush.api.database.generated.tables.records.FlywaySchemaHistoryRecord;
import io.opensw.flypush.api.database.generated.tables.records.InstallationRecord;
import io.opensw.flypush.api.database.generated.tables.records.InstallationTopicRecord;
import io.opensw.flypush.api.database.generated.tables.records.PushMessageRecord;
import io.opensw.flypush.api.database.generated.tables.records.TopicRecord;
import io.opensw.flypush.api.database.generated.tables.records.VariantRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * push.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ApplicationRecord> APPLICATION_PKEY = Internal.createUniqueKey(EngineApplication.ENGINE_APPLICATION, DSL.name("application_pkey"), new TableField[] { EngineApplication.ENGINE_APPLICATION.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(EngineFlywaySchemaHistory.ENGINE_FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { EngineFlywaySchemaHistory.ENGINE_FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<InstallationRecord> INSTALLATION_PKEY = Internal.createUniqueKey(EngineInstallation.ENGINE_INSTALLATION, DSL.name("installation_pkey"), new TableField[] { EngineInstallation.ENGINE_INSTALLATION.ID }, true);
    public static final UniqueKey<InstallationTopicRecord> INSTALLATION_TOPIC_PKEY = Internal.createUniqueKey(EngineInstallationTopic.ENGINE_INSTALLATION_TOPIC, DSL.name("installation_topic_pkey"), new TableField[] { EngineInstallationTopic.ENGINE_INSTALLATION_TOPIC.INSTALLATION_ID, EngineInstallationTopic.ENGINE_INSTALLATION_TOPIC.TOPIC_ID }, true);
    public static final UniqueKey<PushMessageRecord> PUSH_MESSAGE_PKEY = Internal.createUniqueKey(EnginePushMessage.ENGINE_PUSH_MESSAGE, DSL.name("push_message_pkey"), new TableField[] { EnginePushMessage.ENGINE_PUSH_MESSAGE.ID }, true);
    public static final UniqueKey<TopicRecord> TOPIC_PKEY = Internal.createUniqueKey(EngineTopic.ENGINE_TOPIC, DSL.name("topic_pkey"), new TableField[] { EngineTopic.ENGINE_TOPIC.ID }, true);
    public static final UniqueKey<VariantRecord> VARIANT_PKEY = Internal.createUniqueKey(EngineVariant.ENGINE_VARIANT, DSL.name("variant_pkey"), new TableField[] { EngineVariant.ENGINE_VARIANT.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InstallationRecord, VariantRecord> INSTALLATION__INSTALLATION_VARIANT_ID_FKEY = Internal.createForeignKey(EngineInstallation.ENGINE_INSTALLATION, DSL.name("installation_variant_id_fkey"), new TableField[] { EngineInstallation.ENGINE_INSTALLATION.VARIANT_ID }, Keys.VARIANT_PKEY, new TableField[] { EngineVariant.ENGINE_VARIANT.ID }, true);
    public static final ForeignKey<InstallationTopicRecord, InstallationRecord> INSTALLATION_TOPIC__INSTALLATION_TOPIC_INSTALLATION_ID_FKEY = Internal.createForeignKey(EngineInstallationTopic.ENGINE_INSTALLATION_TOPIC, DSL.name("installation_topic_installation_id_fkey"), new TableField[] { EngineInstallationTopic.ENGINE_INSTALLATION_TOPIC.INSTALLATION_ID }, Keys.INSTALLATION_PKEY, new TableField[] { EngineInstallation.ENGINE_INSTALLATION.ID }, true);
    public static final ForeignKey<InstallationTopicRecord, TopicRecord> INSTALLATION_TOPIC__INSTALLATION_TOPIC_TOPIC_ID_FKEY = Internal.createForeignKey(EngineInstallationTopic.ENGINE_INSTALLATION_TOPIC, DSL.name("installation_topic_topic_id_fkey"), new TableField[] { EngineInstallationTopic.ENGINE_INSTALLATION_TOPIC.TOPIC_ID }, Keys.TOPIC_PKEY, new TableField[] { EngineTopic.ENGINE_TOPIC.ID }, true);
    public static final ForeignKey<PushMessageRecord, ApplicationRecord> PUSH_MESSAGE__PUSH_MESSAGE_APPLICATION_ID_FKEY = Internal.createForeignKey(EnginePushMessage.ENGINE_PUSH_MESSAGE, DSL.name("push_message_application_id_fkey"), new TableField[] { EnginePushMessage.ENGINE_PUSH_MESSAGE.APPLICATION_ID }, Keys.APPLICATION_PKEY, new TableField[] { EngineApplication.ENGINE_APPLICATION.ID }, true);
    public static final ForeignKey<VariantRecord, ApplicationRecord> VARIANT__VARIANT_APPLICATION_ID_FKEY = Internal.createForeignKey(EngineVariant.ENGINE_VARIANT, DSL.name("variant_application_id_fkey"), new TableField[] { EngineVariant.ENGINE_VARIANT.APPLICATION_ID }, Keys.APPLICATION_PKEY, new TableField[] { EngineApplication.ENGINE_APPLICATION.ID }, true);
}
