<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.flypush</groupId>
	<artifactId>flypush-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8
		</project.reporting.outputEncoding>
		<java.version>11</java.version>

		<!-- hikaricp version override -->
		<hikaricp.version>3.4.5</hikaricp.version>

		<!-- dependecies versions -->
		<org.mapstruct.version>1.3.1.Final</org.mapstruct.version>

		<org.projectlombok.version>1.18.12</org.projectlombok.version>

		<jooq.version>3.14.3</jooq.version>

		<springdoc.version>1.4.8</springdoc.version>

		<firebase.version>7.0.1</firebase.version>

		<problem-spring-web.version>0.25.0</problem-spring-web.version>

		<version.plugin.checkstyle>3.1.1</version.plugin.checkstyle>

		<keycloak.version>11.0.3</keycloak.version>
		
		<sonar.host.url>http://localhost:9000</sonar.host.url>
		<sonar.login>65098a76161312d4c89cb471391a6c0312e4bf00</sonar.login>
		<sonar.exclusions>**/database/generated/**</sonar.exclusions>
		<sonar.coverage.exclusions>
			**/database/generated/**,
			**Command.java
			**Exception.java, **Config.java
		</sonar.coverage.exclusions>
	</properties>

	<dependencies>
		<!-- Spring Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-spring-boot-starter</artifactId>
			<version>${keycloak.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
			<version>${jooq.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen</artifactId>
			<version>${jooq.version}</version>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.firebase</groupId>
			<artifactId>firebase-admin</artifactId>
			<version>${firebase.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${org.projectlombok.version}</version>
		</dependency>

		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>problem-spring-web</artifactId>
			<version>${problem-spring-web.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<profiles>
		<!-- jOOQ Database Generator -->
		<!-- Creates jOOQ objects for tenant database to be use by provision to 
			access directly to remote databases using jOOQ api This configuration creates 
			objects for engine database that is available in each environment database 
			public schema and for tenant's database. -->
		<profile>
			<id>jooq</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>
										${project.basedir}/src/main/java/io/flypush/api/database/generated
									</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.flywaydb</groupId>
						<artifactId>flyway-maven-plugin</artifactId>
						<version>6.1.0</version>
						<executions>
							<execution>
								<id>tenant</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>clean</goal>
									<goal>migrate</goal>
								</goals>
								<configuration>
									<configFiles>${project.basedir}/flyway/local.conf</configFiles>
									<configFileEncoding>UTF-8</configFileEncoding>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						<version>${jooq.version}</version>
						<executions>
							<execution>
								<id>java-generator</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<configurationFile>${project.basedir}/jooq/jooq-config-local.xml
									</configurationFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Basic checks that are not requiring too much runtime. -->
		<profile>
			<id>checkstyle</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${version.plugin.checkstyle}</version>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<configLocation>checkstyle.xml</configLocation>
									<consoleOutput>true</consoleOutput>
									<failsOnError>true</failsOnError>
									<excludes>**/generated/**/*</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.6.1.1688</version>
				</plugin>
			</plugins>
		</pluginManagement>
		
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>io.opensw.flypush.api.Application</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<release>11</release>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${org.projectlombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>